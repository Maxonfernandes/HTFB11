{"ast":null,"code":"var _jsxFileName = \"/Users/maxonfernandes/Desktop/hacktofuture/maxonn/Dgdrive3.0/client/src/components/Display.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Display.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = _ref => {\n  _s();\n  let {\n    contract,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const getdata = async () => {\n    setLoading(true);\n    const hash = document.querySelector(\".address\").value;\n    try {\n      if (!hash) {\n        throw new Error(\"Please enter a valid IPFS hash\");\n      }\n      const response = await fetch(`https://gateway.pinata.cloud/ipfs/${hash}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch file with hash ${hash}`);\n      }\n\n      // Extract filename from the URL\n      const url = response.url;\n      const filename = url.substring(url.lastIndexOf('/') + 1);\n\n      // Download the file\n      const blob = await response.blob();\n      const blobUrl = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = blobUrl;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error(error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter IPFS Hash\",\n      className: \"address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"center button\",\n      onClick: getdata,\n      children: \"Download File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useState","Display","contract","account","loading","setLoading","getdata","hash","document","querySelector","value","Error","response","fetch","ok","url","filename","substring","lastIndexOf","blob","blobUrl","window","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","error","console","alert","message"],"sources":["/Users/maxonfernandes/Desktop/hacktofuture/maxonn/Dgdrive3.0/client/src/components/Display.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./Display.css\";\r\n\r\nconst Display = ({ contract, account }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getdata = async () => {\r\n    setLoading(true);\r\n    const hash = document.querySelector(\".address\").value;\r\n    try {\r\n      if (!hash) {\r\n        throw new Error(\"Please enter a valid IPFS hash\");\r\n      }\r\n      \r\n      const response = await fetch(`https://gateway.pinata.cloud/ipfs/${hash}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch file with hash ${hash}`);\r\n      }\r\n\r\n      // Extract filename from the URL\r\n      const url = response.url;\r\n      const filename = url.substring(url.lastIndexOf('/') + 1);\r\n\r\n      // Download the file\r\n      const blob = await response.blob();\r\n      const blobUrl = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = blobUrl;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter IPFS Hash\"\r\n        className=\"address\"\r\n      ></input>\r\n      <button className=\"center button\" onClick={getdata}>\r\n        Download File\r\n      </button>\r\n      {loading && <div>Loading...</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAC;AAAA;AAEvB,MAAMC,OAAO,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMM,OAAO,GAAG,YAAY;IAC1BD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAACC,KAAK;IACrD,IAAI;MACF,IAAI,CAACH,IAAI,EAAE;QACT,MAAM,IAAII,KAAK,CAAC,gCAAgC,CAAC;MACnD;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCN,IAAK,EAAC,CAAC;MAEzE,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIH,KAAK,CAAE,kCAAiCJ,IAAK,EAAC,CAAC;MAC3D;;MAEA;MACA,MAAMQ,GAAG,GAAGH,QAAQ,CAACG,GAAG;MACxB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,SAAS,CAACF,GAAG,CAACG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;MAExD;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;MAClC,MAAMC,OAAO,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAChD,MAAMK,CAAC,GAAGhB,QAAQ,CAACiB,aAAa,CAAC,GAAG,CAAC;MACrCD,CAAC,CAACE,IAAI,GAAGN,OAAO;MAChBI,CAAC,CAACG,QAAQ,GAAGX,QAAQ;MACrBR,QAAQ,CAACoB,IAAI,CAACC,WAAW,CAACL,CAAC,CAAC;MAC5BA,CAAC,CAACM,KAAK,EAAE;MACTtB,QAAQ,CAACoB,IAAI,CAACG,WAAW,CAACP,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;IACtB,CAAC,SAAS;MACR9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,iBAAiB;MAC7B,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QACZ,eACT;MAAQ,SAAS,EAAC,eAAe;MAAC,OAAO,EAAEC,OAAQ;MAAA,UAAC;IAEpD;MAAA;MAAA;MAAA;IAAA,QAAS,EACRF,OAAO,iBAAI;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBAChC;AAEP,CAAC;AAAC,GAnDIH,OAAO;AAAA,KAAPA,OAAO;AAqDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}